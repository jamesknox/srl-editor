/* Generated By:JavaCC: Do not edit this line. SrlParserConstants.java */
/* 
 * Copyright (c) 2008, National Institute of Informatics
 *
 * This file is part of SRL, and is free
 * software, licenced under the GNU Library General Public License,
 * Version 2, June 1991.
 *
 * A copy of this licence is included in the distribution in the file
 * licence.html, and is also available at http://www.fsf.org/licensing/licenses/info/GPLv2.html.
 */
package srl.rule.parser;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SrlParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EOL = 3;
  /** RegularExpression Id. */
  int STRMATCH = 4;
  /** RegularExpression Id. */
  int STRMATCH_APPROX = 5;
  /** RegularExpression Id. */
  int STRMATCH_REGEX = 6;
  /** RegularExpression Id. */
  int STRMATCH_ORTH = 7;
  /** RegularExpression Id. */
  int BEGINS = 8;
  /** RegularExpression Id. */
  int ENDS = 9;
  /** RegularExpression Id. */
  int CONTAINS = 10;
  /** RegularExpression Id. */
  int WORDS = 11;
  /** RegularExpression Id. */
  int OPTIONAL = 12;
  /** RegularExpression Id. */
  int NOT = 13;
  /** RegularExpression Id. */
  int CASE = 14;
  /** RegularExpression Id. */
  int OPEN_PARA = 15;
  /** RegularExpression Id. */
  int CLOSE_PARA = 16;
  /** RegularExpression Id. */
  int OPEN_BRACE = 17;
  /** RegularExpression Id. */
  int CLOSE_BRACE = 18;
  /** RegularExpression Id. */
  int COMMA = 19;
  /** RegularExpression Id. */
  int PERCENT = 20;
  /** RegularExpression Id. */
  int IMPLIES = 21;
  /** RegularExpression Id. */
  int COLON = 22;
  /** RegularExpression Id. */
  int SEMICOLON = 23;
  /** RegularExpression Id. */
  int STAR = 24;
  /** RegularExpression Id. */
  int STRING_LITERAL = 25;
  /** RegularExpression Id. */
  int WORDLIST = 26;
  /** RegularExpression Id. */
  int VAR = 27;
  /** RegularExpression Id. */
  int NUMBER = 28;
  /** RegularExpression Id. */
  int WORD = 29;
  /** RegularExpression Id. */
  int COMMENT = 30;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\t\"",
    "\" \"",
    "<EOL>",
    "<STRMATCH>",
    "\"approx\"",
    "\"regex\"",
    "\"ortho\"",
    "\"begins\"",
    "\"ends\"",
    "\"contains\"",
    "\"words\"",
    "\"optional\"",
    "\"not\"",
    "\"case\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\"%\"",
    "\":-\"",
    "\":\"",
    "\";\"",
    "\"*\"",
    "<STRING_LITERAL>",
    "<WORDLIST>",
    "<VAR>",
    "<NUMBER>",
    "<WORD>",
    "<COMMENT>",
  };

}
